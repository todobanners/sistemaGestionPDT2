ERRORES DIFICULTAD MEDIA/BAJA

REPARADO {Aparece vacio si no tiene} CAMA en UBICACION deberia ser un String es mas facil de dejar en null con msj de "no tiene" {Nota de desarrollo: No se cambia a string, debe ser int, se maneja el null en los casos especificos}

- GARANTIA en EQUIPO no está hecha la columna en la tabla
- MARCA en EQUIPO no está //Esto esta en los requerimientos?

- MARCA deberia desplegar un combo que al selecionar la MARCA te despliegue el combo de MODELO asociado a esa MARCA // Revisar requerimientos

REPARADO Limpiar los campos al guardar EQUIPO nuevo

FUNCIONA Al registrar el USUARIO tiene que estar sin validar por defecto // hasta que le ADMIN lo valide

REPARADO - Boton cancelar en REGISTRO USUARIO no hace nada

REPARADO {Muestra que no peude estar vacio el campo} El LISTADO de USUARIO al filtrar por apellido lanza un msj de error que no puede contener numero

- MODIFICAR UBICACION falta botones de confirmacion

- Borrar ventana de ingresar UBICACION

- REGISTRO DE INTERVENCION tiene que tener un combo en Id de equipo que te traiga los disponibles

- EDITAR EQUIPO no funciona // ya no esta el id en la lista para seleccionar [REPARADO, Id no va en listado, Editar Equipo funciona, falta refresh de listado al editar]

- PERFIL campo nombre disable ya que no se permite modificar segun requerimientos

- RESTOS DE MSJ DE CONFIRMACION Y EXTIO SEGUN ESTE TODO FUNCIONANO // ULTIMO CONSIGNA EN RETOCAR



ERRORES PRIORIDAD Y DIFICULTAD ALTA

REPARADO - REGISTRO DE USUARIO no funciona
REPARADO - Cedula no valida
REPARADO - Desde la app no lanza msj de error pero no REGISTRA USUARIO
REAPRADO - CONTRASEÑA sin encriptar en la base de datos


REPARADO DAR DE BAJA en EQUIPO no funciona // ya no abre la ventana que abria antes cuando estaba el id

- REGISTRAR EN EQUIPO no funciona en EQUIPO

- No carga TELEFONOS en el USUARIO

REPARADO No se pueden cargar IMAGENES en EQUIPO

- Borrar UBICACION no funciona // funcionaba antes

- TIPO DE INTERVENCION no funciona AGREGAR

- TIPO DE INTERVENCION sale un msj que no se pudo conectar con el server antes de abrir la ventana

- TIPO DE INTERVENCION no muestra el LISTADO

- TRABAJAR INTERVENCION boton no hace nada / deberia descargar el reporte

- LISTAR INTERVENCIONES no hay input para modificar FECHA DESDE para hacer los filtros

- LISTAR INTERVENCIONES debe tener los FILTROS de requerimientos funcionando



En definitiva que requerimiento se debe solucionar urgente
RF 001-01 - REGISTRO DE USUARIO
RF 001-06 - MODIFICACION DE DATOS PROPIOS DEL USUARIO
RF 006-02 - BAJA DE EQUIPO
RF 007-04 - MOVIMIENTO DE EQUIPO
RF 007-05 - LISTADO DE MOVIMIENTO DE EQUIPO
RF 0014-01 - INGRESO DE TIPO DE INTERVENCION
RF 0014-02 - LISTADO DE TIPO DE INTERVENCIONES
RF 0014-03 - MODIFICACION DE TIPO DE INTERVENCION
RF 0014-04 - BAJA DE TIPO DE INTERVENCION




HARDCODE PARA HACER EL BOTON DE DATOS DE PRUEBA

//soyUnBotonQueButton.setVisible(false); // comentar esta linea para usar el boton de datos de prueba
        //Este boton sirve para generar datos de prueba, descomentar para usar

        soyUnBotonQueButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(null, "Cree algunos datos para funcionar, admin admin");

                try {
                    InstitucionDto institucion = new InstitucionDto();
                    institucion.setNombre("CodigoCreativo");
                    Conexion.obtenerInstitucionBean().agregarInstitucion(institucion);
                    ///////////////////////
                    PerfilDto perfil = new PerfilDto();
                    perfil.setNombrePerfil("Administrador");
                    perfil.setEstado(Estados.ACTIVO);
                    Conexion.obtenerPerfilBean().crearPerfil(perfil);
                    //////////////////////////
                    UsuarioDto usuario = new UsuarioDto();
                    usuario.setFechaNacimiento(LocalDate.now());
                    usuario.setNombre("Administrador");
                    usuario.setApellido("Administrador");
                    usuario.setCedula("12345678");
                    usuario.setEmail("algo@algo.com");
                    usuario.setContrasenia(Utilidades.hashClave("admin"));
                    usuario.setEstado(Estados.ACTIVO);
                    usuario.setNombreUsuario("admin");
                    institucion.setId(1L);
                    usuario.setIdInstitucion(institucion);
                    perfil.setId(1L);
                    usuario.setIdPerfil(perfil);
                    Conexion.obtenerUsuarioBean().crearUsuario(usuario);
                    //////////////////////////
                    UbicacionDto ubicacion = new UbicacionDto();
                    institucion.setId(1L);
                    ubicacion.setIdInstitucion(institucion);
                    ubicacion.setNumero(2L);
                    ubicacion.setPiso(1L);
                    ubicacion.setNombre("CTI");
                    ubicacion.setSector("Sector");
                    Conexion.obtenerUbicacionBean().crearUbicacion(ubicacion);
                    //////////////////////////
                    ProveedoresEquipoDto proveedoresEquipo = new ProveedoresEquipoDto();
                    proveedoresEquipo.setNombre("Proveedor");
                    Conexion.obtenerProveedoresEquipoBean().CrearProveedoresEquipo(proveedoresEquipo);
                    //////////////////////////////
                    PaisDto pais = new PaisDto();
                    pais.setNombre("Uruguay");
                    Conexion.obtenerPaisBean().crearPais(pais);
                    /////////////////////////////////////////////////////
                    MarcasModeloDto marcasModelos = new MarcasModeloDto();
                    marcasModelos.setNombre("Marca");
                    Conexion.obtenerMarcaBean().crearMarcasModelo(marcasModelos);
                    ////////////////////////////////////////
                    ModelosEquipoDto modelosEquipo = new ModelosEquipoDto();
                    modelosEquipo.setNombre("Modelo");
                    marcasModelos.setId(1L);
                    modelosEquipo.setIdMarca(marcasModelos);
                    Conexion.obtenerModeloBean().crearModelosEquipo(modelosEquipo);
                    ///////////////////////////////////////////////////////////////


                } catch (NamingException | ServiciosException ex) {
                    throw new RuntimeException(ex);
                }
            }
        });